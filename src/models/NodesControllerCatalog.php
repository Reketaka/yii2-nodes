<?php

namespace reketaka\nodes\models;

use reketaka\nodes\helpers\NodeHelper;
use Yii;

/**
 * This is the model class for table "nodes_controller_catalog".
 *
 * @property integer $id
 * @property string $path
 *
 * @property Nodes[] $nodes
 */
class NodesControllerCatalog extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'nodes_controller_catalog';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['path'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'path' => Yii::t('app', 'Путь до контроллера и его метода'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getNodes()
    {
        return $this->hasMany(Nodes::className(), ['controller_id' => 'id']);
    }

    /**
     * Индексирует новые методы контроллеров и записывает их в справочник
     * @return true
     */
    public static function reIndex(){
        foreach(NodeHelper::getControllerMethods() as $path){

            if(NodesControllerCatalog::findOne(['path'=>$path])){
                continue;
            }

            $nodeCC = new self();
            $nodeCC->path = $path;
            $nodeCC->save(true);
        }

        return true;
    }

    public function beforeDelete()
    {
        /**
         * Дочерним Node ставим controller_id = null чобы убрать связь
         */
        Nodes::updateAll(['controller_id'=>null], 'controller_id = '.$this->id);

        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }
}
